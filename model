import os
import base64
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build
import boto3

# initialize Gmail and Comprehend clients
creds = Credentials.from_authorized_user_file(os.environ['GOOGLE_APPLICATION_CREDENTIALS'], ['https://www.googleapis.com/auth/gmail.readonly'])
gmail = build('gmail', 'v1', credentials=creds)
comprehend = boto3.client('comprehend')

# define the filter criteria for emails to retrieve
query = "from:example@company.com subject:'Product issue'"

# retrieve a list of matching email message IDs
response = gmail.users().messages().list(userId='me', q=query).execute()
message_ids = [msg['id'] for msg in response.get('messages', [])]

# retrieve and summarize the text of each email
for msg_id in message_ids:
    msg = gmail.users().messages().get(userId='me', id=msg_id).execute()
    subject = next(h['value'] for h in msg['payload']['headers'] if h['name'] == 'Subject')
    body = base64.urlsafe_b64decode(msg['payload']['body']['data']).decode('utf-8')

    # perform extractive summarization using Comprehend
    response = comprehend.batch_extract_key_phrases(
        TextList=[body],
        LanguageCode='en'
    )

    key_phrases = [kp['Text'] for kp in response['ResultList']]
    num_sentences = round(0.3 * len(key_phrases))
    summary_sentences = sorted(key_phrases, key=len)[:num_sentences]
    summary = ' '.join(summary_sentences)

    print("Email subject: \n", subject)
    print("Original email text: \n", body)
    print("Extractive summary: \n", summary)
    print("---------------------------------------------------")
