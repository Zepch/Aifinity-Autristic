import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import train_test_split
import joblib

# Load the dataset
meetings = pd.read_csv('meetings.csv')

# Split the data into features (X) and target variable (y)
X = meetings.drop(['start_time', 'end_time', 'duration'], axis=1)
y = meetings['duration']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Random Forest regressor and fit it to the training data
rf = RandomForestRegressor(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# Make predictions on the testing set and calculate the mean absolute error
y_pred = rf.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
print('Mean Absolute Error:', mae)

# Save the trained model to a file named 'model.pkl'
joblib.dump(rf, 'model.pkl')
